/* frontend/style.css */
body {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    background-color: #FFFFFF;
    color: #333333;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    padding: 10px;
    box-sizing: border-box;
    overflow-x: hidden;
}

.game-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 98%;
    height: calc(100vh - 20px);
    position: relative;
}

.top-and-middle-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    flex-grow: 1;
    overflow: hidden;
}

.player-area.opponent-top {
    width: 60%;
    min-height: 130px;
    margin-bottom: 10px;
    background-color: transparent;
    border: none;
    box-shadow: none;
}

.middle-section {
    display: flex;
    justify-content: space-between;
    width: 100%;
    align-items: center; /* 改为 center 以更好地对齐旋转后的内容 */
    margin-bottom: 15px;
    flex-grow: 1;
}

.player-area {
    border: none;
    border-radius: 0;
    padding: 10px;
    background-color: transparent;
    box-shadow: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
}

/* 左右玩家区域特定样式 */
.player-area.side-player {
    flex-basis: 150px; /* 给予足够的“宽度”基础，旋转后这部分会影响垂直空间 */
    flex-grow: 0;
    min-height: 250px; /* 主轴（垂直）的最小高度 */
    justify-content: center; /* 尝试在主轴（垂直）上居中手牌容器 */
    position: relative; /* 为手牌容器的可能的绝对定位或transform调整 */
}

.player-area.side-player .hand {
    display: flex;
    /* flex-direction: row; // 卡牌在旋转前是水平排列的 */
    /* 改变策略：让手牌容器本身去适应旋转后的卡牌 */
    width: auto; /* 或者一个固定的值，例如等于一张牌的高度 */
    height: auto; /* 或者一个固定的值，例如等于多张牌叠起来的宽度 */
    align-items: center; /* 交叉轴居中 */
    justify-content: center; /* 主轴居中 */
    transform-style: preserve-3d; /* 如果需要更复杂的3D堆叠 */
    /* padding: 20px 0; */ /* 给旋转后的牌一些上下空间 */
}

/* 对左右玩家的每个牌背应用旋转和位移来实现重叠 */
.player-area.side-player .hand .card {
    width: 45px;  /* 牌的原始宽度 */
    height: 70px; /* 牌的原始高度 */
    margin: 0;    /* 重置 margin */
    position: absolute; /* 使用绝对定位来堆叠旋转的牌 */
    /* transform-origin: center center; (默认) */
    /* z-index 由JS设置 */
}

#player-3-area .hand .card {
    transform-origin: center; /* 确保以中心旋转 */
    transform: rotate(90deg);
    /* 绝对定位后，通过 top/left 和 transform: translate() 来调整位置和重叠 */
    /* 假设父容器 .hand 有一定高度，牌的中心大致对齐 */
    /* left: 50%; */ /* 水平居中 */
    /* transform: translateX(-50%) rotate(90deg); */ /* 先居中再旋转 */
}

#player-4-area .hand .card {
    transform-origin: center;
    transform: rotate(-90deg);
    /* left: 50%; */
    /* transform: translateX(-50%) rotate(-90deg); */
}

/* 通过JavaScript动态计算和设置每个卡牌的 top/left 和 z-index 会更精确 */
/* 这里CSS只做基础旋转，JS负责精细布局 */


.human-player-area {
    width: 95%;
    margin-top: auto;
    padding-bottom: 10px;
    background-color: transparent;
    min-height: 180px;
    flex-shrink: 0;
    border: none;
    box-shadow: none;
}

.play-area {
    border: none;
    border-radius: 0;
    padding: 15px;
    min-height: 180px;
    flex-basis: auto;
    flex-grow: 1;
    margin: 0 10px;
    background-color: transparent;
}

.last-played-player {
    font-size: 0.9em;
    color: #0056b3;
    margin-bottom: 8px;
    min-height: 1.2em;
}

.played-cards-display {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    min-height: 120px;
    width: 100%;
}

.hand {
    display: flex;
    justify-content: center;
    align-items: flex-end;
    flex-wrap: wrap;
    padding-top: 10px;
    min-height: 100px;
    width: 100%;
    position: relative; /* 为绝对定位的子元素（旋转的牌）提供上下文 */
}

.human-player-area .hand .card {
    width: 60px;
    height: 90px;
    margin: 0 -28px 0 0;
    position: relative; /* 确保 z-index 生效 */
}

.card {
    background-color: #FFFFFF;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    border: 1px solid #999999;
    border-radius: 5px;
    cursor: pointer;
    transition: transform 0.15s ease-out, box-shadow 0.15s ease-out;
    box-shadow: 2px 2px 4px rgba(0,0,0,0.15);
    overflow: hidden;
}

.played-cards-display .card {
    margin: 2px;
    cursor: default;
    width: 60px;
    height: 90px;
}

.human-player-area .hand .card:last-child {
    margin-right: 0;
}

.card.selected {
    transform: translateY(-15px) scale(1.03);
    box-shadow: 0px 8px 12px rgba(0,0,0,0.2);
    z-index: 10;
}

.opponent-area .hand .card { /* 通用对手牌样式 */
    /* width, height, border, shadow 已在上面定义或将被特定样式覆盖 */
    cursor: default;
}

.player-area.opponent-top .hand .card {
    width: 45px;
    height: 70px;
    margin: 0 -35px 0 0;
    position: relative; /* 确保 z-index 生效 */
}
.player-area.opponent-top .hand .card:last-child {
    margin-right: 0;
}

.controls { margin-top: 20px; }
.controls button {
    padding: 10px 15px; margin: 0 6px; font-size: 0.95em; border-radius: 5px;
    border: 1px solid #cccccc; cursor: pointer; background-color: #f8f9fa;
    color: #333333; font-weight: bold; transition: background-color 0.1s, transform 0.05s;
}
.controls button:disabled {
    background-color: #e9ecef; color: #adb5bd; border-color: #dee2e6; cursor: not-allowed;
}
.controls button:not(:disabled):hover { background-color: #e2e6ea; border-color: #ced4da; }
.controls button:not(:disabled):active { transform: scale(0.98); background-color: #d3d9df; }
#message-area {
    margin-top: 15px; font-weight: bold; font-size: 1em; min-height: 22px;
    color: #555555; text-align: center;
}
h2 {
    margin-top: 0; margin-bottom: 8px; font-size: 1.1em; color: #666666;
    text-align: center; font-weight: normal;
}
#loading-indicator {
    position: fixed; top: 10px; left: 50%; transform: translateX(-50%);
    background-color: rgba(80,80,80,0.85); color: white; padding: 8px 15px;
    border-radius: 4px; z-index: 1000; font-size: 0.9em;
}
