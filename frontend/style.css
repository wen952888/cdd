/* frontend/style.css */
body {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    background-color: #FFFFFF;
    color: #333333;
    display: flex; /* body 使用 flex 来居中 game-container */
    justify-content: center;
    align-items: center; /* 垂直居中 game-container */
    min-height: 100vh;
    margin: 0;
    padding: 10px;
    box-sizing: border-box;
    overflow-x: hidden; /* 防止旋转后内容溢出导致水平滚动条 */
}

.game-container {
    display: flex;
    flex-direction: column; /* 主容器改为列布局 */
    align-items: center;
    width: 100%;
    max-width: 98%;
    height: calc(100vh - 20px); /* 使 game-container 占据大部分视口高度 */
    position: relative; /* 为可能的绝对定位子元素做准备 */
}

.top-and-middle-section { /* 新增一个包裹层，用于顶部玩家和中间区域 */
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

.player-area.opponent-top { /* 顶部玩家 (玩家2) */
    width: 50%; /* 调整宽度 */
    min-height: 140px; /* 调整高度 */
    margin-bottom: 10px;
}

.middle-section {
    display: flex;
    justify-content: space-between;
    width: 100%;
    align-items: stretch; /* 让子元素高度一致 */
    margin-bottom: 15px;
    flex-grow: 1; /* 让中间部分占据剩余空间 */
}

.player-area { /* 通用玩家区域样式 */
    border: 1px solid #cccccc;
    border-radius: 8px;
    padding: 10px;
    background-color: #f9f9f9;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
}

/* 左右玩家特定样式 */
#player-3-area, #player-4-area {
    flex-basis: 15%; /* 调整基础宽度，因为旋转后高度会变成宽度 */
    min-width: 120px; /* 旋转后，这个会像是高度 */
    justify-content: center; /* 垂直居中旋转后的手牌 */
}

#player-3-area .hand, #player-4-area .hand {
    display: flex;
    /* 对于旋转，flex-direction 会影响主轴，可能需要调整为 row 或 column-reverse */
    /* 我们将直接在 .card 上应用旋转后的偏移 */
    position: relative; /* 为卡牌的绝对定位或transform做准备 */
    width: auto; /* 手牌容器宽度由内容决定 */
    height: 100%; /* 尝试让手牌区域填充 */
}

/* 旋转应用 */
#player-3-area .hand {
    /* transform: rotate(90deg); */ /* 顺时针旋转 */
    /* transform-origin: center center; */
}
#player-4-area .hand {
    /* transform: rotate(-90deg); */ /* 逆时针旋转 */
    /* transform-origin: center center; */
}
/* 注意：直接旋转 .hand 容器会导致其内部 flex 布局行为改变。
   更稳妥的做法是旋转卡牌本身，或者为旋转后的手牌设计新的布局。
   一个简化的方法是让手牌容器本身变窄高，然后卡牌在里面正常横向排列，再整体旋转容器。
   但最直接的旋转效果是旋转每张牌，但这会使重叠复杂化。

   我们将尝试一个不同的策略：让左右玩家区域本身变高窄，然后在里面横向排列牌背，
   最后再考虑是否真的需要CSS旋转，或者仅通过视觉暗示。
   真正的CSS旋转手牌并保持良好布局非常复杂。

   替代方案：不直接旋转，而是让左右玩家的牌垂直堆叠，暗示侧面视角。
*/
#player-3-area .hand, #player-4-area .hand {
    flex-direction: column; /* 改为垂直排列牌 */
    align-items: center; /* 水平居中 */
    justify-content: flex-start; /* 从顶部开始排列 */
    height: auto; /* 高度由内容决定 */
    width: 100%;
}

#player-3-area .hand .card, #player-4-area .hand .card {
    margin: -60px 0 0 0; /* 垂直重叠，负的上边距 */
    /* 移除横向重叠的 margin-right */
}
#player-3-area .hand .card:first-child, #player-4-area .hand .card:first-child {
    margin-top: 0;
}


.human-player-area {
    width: 95%; /* 主玩家区域宽度 */
    margin-top: auto; /* !!! 关键：将此区域推到 .game-container 的底部 !!! */
    padding-bottom: 10px; /* 底部留一些空间 */
    background-color: #f0f0f0;
    min-height: 180px; /* 确保有足够高度 */
}

.play-area {
    border: 2px dashed #bbbbbb;
    border-radius: 8px;
    padding: 15px;
    min-height: 180px; /* 调整出牌区最小高度 */
    flex-basis: 60%; /* 出牌区占据中间大部分宽度 */
    flex-grow: 1;
    margin: 0 10px; /* 调整与左右玩家的间距 */
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #e9e9e9;
    box-sizing: border-box;
}

.last-played-player {
    font-size: 0.9em;
    color: #0056b3;
    margin-bottom: 8px;
    min-height: 1.2em;
}

.played-cards-display {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    min-height: 120px;
    width: 100%;
}

.hand { /* 通用手牌容器 */
    display: flex;
    justify-content: center;
    align-items: flex-end;
    flex-wrap: wrap;
    padding-top: 10px;
    min-height: 100px;
    width: 100%;
}

/* 主玩家手牌的特定样式 */
.human-player-area .hand .card {
    width: 60px;
    height: 90px;
    margin: 0 -28px 0 0; /* 横向重叠 */
}

.card { /* 通用卡牌样式，会被特定区域覆盖 */
    background-color: #FFFFFF;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    border: 1px solid #999999;
    border-radius: 5px;
    cursor: pointer;
    transition: transform 0.15s ease-out, box-shadow 0.15s ease-out;
    box-shadow: 2px 2px 4px rgba(0,0,0,0.15);
    overflow: hidden;
}

.played-cards-display .card {
    margin: 2px;
    cursor: default;
    width: 60px; /* 统一出牌区卡牌大小 */
    height: 90px;
}

.human-player-area .hand .card:last-child { /* 确保人类玩家最后一张牌不被切掉 */
    margin-right: 0;
}

.card.selected {
    transform: translateY(-15px) scale(1.03);
    box-shadow: 0px 8px 12px rgba(0,0,0,0.2);
    z-index: 10;
}

/* 对手牌背的样式 (包括顶部和左右) */
.opponent-area .hand .card {
    width: 45px;
    height: 70px;
    cursor: default;
    border-color: #aaaaaa;
    box-shadow: 1px 1px 2px rgba(0,0,0,0.1);
}

/* 对手（顶部）牌的横向重叠 */
.player-area.opponent-top .hand .card {
    margin: 0 -35px 0 0; /* 横向重叠 */
}
.player-area.opponent-top .hand .card:last-child {
    margin-right: 0;
}


.controls {
    margin-top: 20px;
}

.controls button {
    padding: 10px 15px;
    margin: 0 6px;
    font-size: 0.95em;
    border-radius: 5px;
    border: 1px solid #cccccc;
    cursor: pointer;
    background-color: #ffffff;
    color: #333333;
    font-weight: bold;
    transition: background-color 0.1s, transform 0.05s;
}
.controls button:disabled {
    background-color: #e0e0e0;
    color: #999999;
    border-color: #dddddd;
    cursor: not-allowed;
}

.controls button:not(:disabled):hover {
    background-color: #f0f0f0;
    border-color: #bbbbbb;
}
.controls button:not(:disabled):active {
    transform: scale(0.98);
    background-color: #e0e0e0;
}

#message-area {
    margin-top: 15px;
    font-weight: bold;
    font-size: 1em;
    min-height: 22px;
    color: #d9534f;
    text-align: center;
}

h2 {
    margin-top: 0;
    margin-bottom: 8px;
    font-size: 1.1em;
    color: #555555;
    text-align: center;
}

#loading-indicator {
    position: fixed;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(50,50,50,0.85);
    color: white;
    padding: 8px 15px;
    border-radius: 4px;
    z-index: 1000;
    font-size: 0.9em;
}
